generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  refresh_token_expires_in Int?
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  space         Space[]
}

model Space {
  id          String        @id @default(cuid())
  userId      String?
<<<<<<< HEAD
  spaceName   String
  title       String
  description String
  image       String?
=======
  title       String
  description String?
>>>>>>> 0d0f5291b3f78378fdff1103382425c197029645
  isActive    Boolean       @default(true)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  testimonial Testimonial[]
  user        User?         @relation(fields: [userId], references: [id])
<<<<<<< HEAD

  @@unique([spaceName, userId])
=======
>>>>>>> 0d0f5291b3f78378fdff1103382425c197029645
}

model Testimonial {
  id         String   @id @default(cuid())
<<<<<<< HEAD
  spaceId    String?
=======
  spaceId    String
>>>>>>> 0d0f5291b3f78378fdff1103382425c197029645
  name       String
  email      String?
  content    String
  rating     Int
  imageUrl   String?
  isApproved Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
<<<<<<< HEAD
  space      Space?   @relation(fields: [spaceId], references: [id])
=======
  space      Space    @relation(fields: [spaceId], references: [id])
>>>>>>> 0d0f5291b3f78378fdff1103382425c197029645
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
